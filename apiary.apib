FORMAT: 1A
HOST: https://api.manheim.com/

# Assurance Order Management System (AOMS)

AOMS is a system to accept orders for Assurance Protection
products, such as Repair Guarantee and eventually PSI and DealShield.

## Arbitration Eligibility

Compute eligibility to open an arbitration case against a purchase

### Authentication
This API uses Custom Header for its authentication.

The parameters that are needed to be sent for this type of authentication are as follows:
+ `Authorization` - JWT Authorization using the Bearer scheme. Example: "Authorization: Bearer {token}"

# Issues Arbitration Eligibility [/issues/arbitration/eligibility]

## Compute arbitration eligibility [POST]
Compute arbitration eligibility

### Example ineligible response _message_


| message |
|---|
| This vehicle does not meet the sale light eligibility criteria for Arbitration. |
| This vehicle does not meet the model year eligibility criteria for Arbitration. |
| This vehicle does not meet the time-based eligibility criteria for Arbitration. |

### Example Bad request 400 _message_

| message |
|---|
| This business is not supported yet. |
| This channel is not supported yet. |


+ Request (application/json)

    + Attributes (purchase)



+ Response 200 (application/json)

        successful response

    + Attributes (Compute arbitration eligibilityResponse)


    + Body

            {
                "eligible": false,
                "message": "This vehicle does not meet the [*generic message(needs a table)*] for Arbitration."
            }

+ Response 400 (application/json)

        request error

    + Attributes (Compute arbitration eligibilityResponse)


    + Body

            {
                "eligible": false,
                "message": "This business is not supported yet"
            }



+ Response 404 (application/json)

        client error

    + Attributes (Compute arbitration eligibilityResponse)


    + Body

            {
                "eligible": false,
                "message": "no purchase found matching given fields"
            }


# Data Structures

## purchase (object)

### Properties

+ `business`: `Manheim Auction` (string, required) - Manheim Auction
+ `sourceSystemId`: `14720894` (string, required) - SBLU
+ `buyerChannel` (enum[string], required)
  + `OVE` - OVE Channel
  + `IN-LANE` - IN-LANE Channel
  + `SIMULCAST` - SIMULCAST  Channel
+ `buyerNumber`: `5000111` (number, required)
+ `auctionCode`: `MAA` (string, required)
+ `saleYear`: `2019` (number, optional)
+ `saleNumber`: `22` (number, optional)
+ `laneNumber`: `11` (number, optional)
+ `runNumber`: `74` (number, optional)


## Compute arbitration eligibilityResponse (object)


### Properties
+ `eligible` (boolean, required)
+ `message` (string, optional)


## Error (object)

### Properties
+ `message` (string, required)


# Group Customers

## Customers [/dealers]

### Customer Subscription [/dealers/{dealerNumber}/subscriptions]

### Create or Update a Customer Subscription [POST  /dealers]

+ Request (application/json)
    + Attributes (Subscription Create Payload)

+ Response 201 (application/json)

        Customer created

    + Body

            {
                "dealerNumber": "500202",
                "approverName": "Mia Toretto",
                "dealerName": "Brian OConner",
                "contactName": "Dominic Toretto",
                "contactEmail": "dominic@toretto.com",
                "contactPhoneNumber": "123456",
                "status": "active",
                "cascade": true,
                "excludeCloseSale": true,
                "products": {
                    "sevenDayVarPSI": {
                        "active": true,
                        "startDate": "2019-01-01",
                        "endDate": "2019-01-20",
                        "price": 1000,
                        "coverageConditions": {
                            "channels": {
                                "In-Lane": {
                                    "auctionIds": [
                                        "PSM1"
                                    ]
                                }
                            },
                            "mileage": 200
                        },
                        "LPI": {
                            "mileage": 126000,
                            "price": 300
                        }
                    }
                },
                "createdAt": "2019-11-14T19:18:12.874Z"
            }


+ Response 200 (application/json)

        Customer updated

    + Body

            {
                "cascade": true,
                "contactEmail": "dominic@toretto.com",
                "approverName": "Mia Toretto",
                "contactName": "Dominic Toretto",
                "products": {
                    "sevenDayVarPSI": {
                        "active": true,
                        "coverageConditions": {
                            "channels": {
                                "In-Lane": {
                                    "auctionIds": [
                                        "PSM1"
                                    ]
                                }
                            },
                            "mileage": 200
                        },
                        "LPI": {
                            "price": 300,
                            "mileage": 126000
                        },
                        "endDate": "2019-01-20",
                        "startDate": "2019-01-01",
                        "price": 1000
                    }
                },
                "updatedAt": "2019-11-14T19:19:33.862Z",
                "status": "active",
                "createdAt": "2019-11-14T19:18:12.874Z",
                "dealerName": "Brian OConner",
                "dealerNumber": "500202",
                "excludeCloseSale": false,
                "contactPhoneNumber": "123456"
            }

+ Response 400 (application/json)

        Create or Update error

    + Body

            {
                "message": "Error message"
            }


### Retrieve a Customer Subscription [GET]

+ Parameters
    + dealerNumber: `5000100` (required)

+ Response 200 (application/json)
    + Attributes (Subscription)

+ Response 404 (application/json)


### Cancel a Customer Subscription  [POST  /dealers/subscriptions/cancel]

+ Request

        {
            "dealerNumber": "123456",
            "endDate": "2019-09-26"
        }

+ Response 200 (application/json)

        Successful Cancellation

    + Body

            {
                "message": "PSI subscription has been cancelled"
            }

+ Response 400 (application/json)

        Cancel error

    + Body

            {
                "message": "Error message"
            }

# Data Structures

## Subscription (object)
+ message: `Dealer 5000100 has a PSI product subscription.`
+ description
    + dealerNumber: 5000100 (number, required)
    + dealerName: `Brian OConner` (string, required)
    + contactName: `Dominic Toretto` (string, required)
    + contactEmail: `dominic@toretto.com` (string, required)
    + contactPhoneNumber: `123456` (string, required)
    + cascade: true (boolean, required)
    + excludeCloseSale: true (boolean, required)
    + products: (object, required)
        + Members
            + sevenDayVarPSI (object)
            + fourTeenDayVarPSI (object)
            + sevenDayFlatPSI (object)
            + fourteenDayFlatPSI (object)
        + sevenDayVarPSI
            + auctionIds: `PSM1` (array[string])
            + startDate: `2019-01-01` (string)
            + endDate: `2019-01-20` (string)
            + PSImileage: 13000 (number)
            + LPImileage: 126000 (number)
            + LPIprice: 300 (number)
            + PSIprice: 1000 (number)
            + channel: (array)
                + (enum[string])
                    + `In-Lane`
                    + `Simulcast`


## Subscription Create Payload (object)
+ dealerNumber: `500202` (required)
+ approverName: `Mia Toretto`
+ contactName: `Dominic Toretto` (required)
+ dealerName: `Brian OConner` (required)
+ contactEmail: `dominic@toretto.com` (required)
+ contactPhoneNumber: `123456` (required)
+ cascade: true (boolean, required)
+ excludeCloseSale: true (boolean, required)
+ products: (object, required)
    + Members
        + sevenDayVarPSI (object)
        + fourTeenDayVarPSI (object)
        + sevenDayFlatPSI (object)
        + fourteenDayFlatPSI (object)
    + sevenDayVarPSI
        + auctionIds: `PSM1` (array[string])
        + startDate: `2019-01-01` (string)
        + endDate: `2019-01-20` (string)
        + PSImileage: 13000 (number)
        + LPImileage: 126000 (number)
        + LPIprice: 300 (number)
        + PSIprice: 1000 (number)
        + channel: (array)
            + (enum[string])
                + `In-Lane`
                + `Simulcast`
    + fourteenVarPSI
        + auctionIds: `PSM1` (array[string])
        + startDate: `2019-01-01` (string)
        + endDate: `2019-01-30` (string)
        + PSImileage: 1300 (number)
        + LPImileage: 127000 (number)
        + LPIprice: 300 (number)
        + PSIprice: 1000 (number)
        + channel: (array)
            + (enum[string])
                + `In-Lane`
                + `Simulcast`


# Bulk request for Issues Arbitration Corrected the spelling of eligibilityEligibility [/issues/arbitration/eligibility/bulk]

## Bulk Compute arbitration eligibility [POST]

Compute arbitration eligibility for multiple transtactions


+ Request Existing Transaction in Purchases API (application/json)

    + Attributes (array[purchase])


+ Response 200 (application/json)
    + Attributes (array[Compute arbitration eligibilityResponse])


    + Body

            [
                {
                    "eligible": false,
                    "message": "This vehicle does not meet the [*generic message(needs a table)*] for Arbitration."
                }
            ]

+ Request Missing Transaction in Purchases API (application/json)

    + Attributes (array[purchase])


+ Response 200 (application/json)
    + Attributes (array[Compute arbitration eligibilityResponse])


    + Body

            [
                {
                    "eligible": false,
                    "message": "no purchase found matching given fields"
                }
            ]

## Orders [/orders/assurance/]

### Create a New Order [POST]

You may create your own order using this action. It takes a JSON
object containing physical location name, order account number (seller
number), productId, and other vehicle-related information.

+ Request (application/json)
    + Attributes (Order Create Payload)

    + Body

            {
                "physicalLocation": {
                    "name": "MISS"
                },
                "orderingAccountNumber": 5123456,
                "productId": "REPAIR_GUARANTEE",
                "additionalOrderInfo": {
                    "workOrderNumber": 1234567
                },
                "vehicle": {
                    "mmr": 24000,
                    "vin": "JF2SJADC3FH504814",
                    "year": 2015,
                    "make": "SUBARU",
                    "trim": "Premium Moonroof",
                    "model": "Forester",
                    "odometer": 12345
                }
            }

+ Response 201 (application/json)

    + Headers

            Location: https://api-staging.aoms-np.dealshield.com/orders/assurance/id/rg_fe880faf-7d44-4b7d-8245-2f12bdbb4011

    + Body

            {
                "href": "https://api-staging.aoms-np.dealshield.com/orders/assurance/id/rg_fe880faf-7d44-4b7d-8245-2f12bdbb4011",
                "orderingAccountNumber": 5123456,
                "status": "PENDING",
                "productId": "REPAIR_GUARANTEE",
                "vehicle": {
                    "mmr": 24000,
                    "currency": "USD",
                    "vin": "JF2SJADC3FH504814",
                    "year": 2015,
                    "make": "SUBARU",
                    "trim": "Premium Moonroof",
                    "model": "Forester",
                    "odometer": 12345,
                    "odometerUnit": "miles"
                },
                "physicalLocation": {
                    "name": "MISS",
                    "operationLocation": {
                        "href": "https://integration1.api.manheim.com/locations/id/MISS"
                    },
                    "type": "AT_AUCTION"
                },
                "sellerAccountNumber": 5123456,
                "unit": {
                    "href": "https://api.manheim.com/XXXXX"
                },
                "createdOn": "2015-08-05T08:40:51.620Z"
            }

### Order [/orders/assurance/id/{id}]

### Retrieve an Order [GET]
Get the order object by providing an id

+ Parameters
    + id: `rg_fe880faf-7d44-4b7d-8245-2f12bdbb4011` (required)

+ Response 200 (application/json)
    + Attributes (Order)

### Create more than one order  [POST /orders/assurance/bulk]

+ Request (application/json)
    + Attributes (array[Order Create Payload])

    + Body
    ```
        [
            {
                "physicalLocation": {
                    "name": "MISS",
                    "type": "AT_AUCTION"
                },
                "orderingAccountNumber": 5123456,
                "productId": "REPAIR_GUARANTEE",
                "additionalOrderInfo": {
                    "workOrderNumber": 1234567
                },
                "vehicle": {
                    "mmr": 24000,
                    "vin": "JF2SJADC3FH504814",
                    "year": 2015,
                    "make": "SUBARU",
                    "trim": "Premium Moonroof",
                    "model": "Forester",
                    "odometer": 12345
                }
            }
        ]
    ```

+ Response 201 (application/json)
    + Attributes
        + href
        + count (number): number of items
        + items (array[Order])

### Retrieve multiple orders using vin, order account number and productId combination [POST /orders/assurance/search]

Get more than one order by posting a body which contains an array of objects

+ Request (application/json)
    + Attributes (array[Order Search Payload])

    + Body
    ```
        [
            {"vin": "JF2SJADC3FH504812","orderingAccountNumber": 5123456, "productId": "REPAIR_GUARANTEE" },
            {"vin": "JF2SJADC3FH504814","orderingAccountNumber": 5123456, "productId": "REPAIR_GUARANTEE" },
            {"vin": "JF2SJADC3FH504813","orderingAccountNumber": 5123456, "productId": "REPAIR_GUARANTEE" }
        ]
    ```

+ Response 200 (application/json)
    + Attributes
        + count `1` (number)
            number of items
        + items (array[Order])


# Data Structures

## Order (object)
+ physicalLocation
    + name `MISS`
        the name of the location
    + type (enum, required)
        type of location
        + Default: AT_AUCTION
        + Members
            + AT_AUCTION
            + AT_DEALERSHIP
    + operationLocation
        + href `https://integration1.api.manheim.com/locations/id/MISS`
            URL of details about the physical location
    + address `6325 Peachtree Dunwoody Road`
    + city `Atlanta`
    + state `GA`
    + zip `30328`
+ orderingAccountNumber (number, required)
    (Manheim) account number (5 million number) of the ordering entity.
    This is the account that will be billed for the product
+ sellerAccountNumber (number): Manheim account number of the seller
+ buyerAccountNumber (number): Manheim account number of the buyer
+ productId (enum, required)
    the product id
    + Members
        + REPAIR_GUARANTEE
+ status (enum)
    the order state
    + Members
        + PENDING
        + CANCELLED
        + FULFILLED
+ reasonForCancellation: the reason order state is cancelled
+ vehicle (Vehicle, required)
    vehicle information
+ unit
    + href `https://integration1.api.manheim.com/units/id/8d791464-597e-11e8-bec7-270b901fc001`
+ href `https://api-staging.aoms-np.dealshield.com/orders/assurance/id/rg_2646e70d-f4ea-433c-b475-917676446bb1`
+ createdOn: timestamp of when order was created (string) - Timestamp
+ updatedOn: timestamp of when order was updated (string) - Timestamp

## Vehicle (object)
+ vin: Vehicle Identification Number (required)
+ year (number, required)
+ make (required)
+ trim (required)
+ model (required)
+ salePrice (number)
    the price of the vehicle
+ mmr (number): MMR of the vehicle
+ currency
    the currency for the the vehicle price
    + Default: USD
+ odometer (number, required)
    the number of miles/kilometers traveled
+ odometerUnit (enum)
    the measuring unit for the odometer
    + Default: miles
    + Members
        + miles
        + kilometers
+ specialAttributes (array[enum])
    tags that can apply to a vehicle
    + Members
        + electricVehicle
        + hybridVehicle
        + redLightVehicle
        + salvage

## Order Create Payload (object)
+ physicalLocation
    + name `MISS`
        the name of the location
    + type (enum, required)
        type of location
        + Members
            + AT_AUCTION
            + AT_DEALERSHIP
    + operationLocation
        + href `https://api.manheim.com/locations/id/MISS`
            URL of details about the physical location
    + address `6325 Peachtree Dunwoody Road`
    + city `Atlanta`
    + state `GA`
    + zip `30319`
+ orderingAccountNumber (number, required)
    (Manheim) account number (5 million number) of the ordering entity.
    This is the account that will be billed for the product
+ productId (enum, required)
    the product id
    + Members
        + REPAIR_GUARANTEE
+ vehicle (Vehicle)

## Order Search Payload (object)
+ vin (required): Vehicle Identification Number
+ orderingAccountNumber (number, required): the 5 million number of the person placing the order
+ productId (enum, required)
    the product id
    + Members
        + REPAIR_GUARANTEE
